name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/jod'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.project }}
    
    - name: Build application
      run: npm run build
      
    - name: Start preview server
      run: |
        npm run preview &
        sleep 5
      env:
        VITE_PORT: 4173
    
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:4173
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ matrix.project }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30

  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    if: always()
    needs: test
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          artifacts/**/test-results/*.xml
        check_name: Playwright Test Results
        comment_title: Playwright Test Results
        
    - name: Comment PR with results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## ðŸŽ­ Playwright Test Results\n\n';
          
          // Check for test results
          const artifactsDir = 'artifacts';
          if (fs.existsSync(artifactsDir)) {
            const projects = fs.readdirSync(artifactsDir);
            
            for (const project of projects) {
              if (project.includes('playwright-results')) {
                const browser = project.replace('playwright-results-', '');
                comment += `- **${browser}**: âœ… Tests completed\n`;
              }
            }
          }
          
          comment += '\n[View full test report in Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });